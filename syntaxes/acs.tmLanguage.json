{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "ACS",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#punctuation"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#types"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#directives"
        },
        {
            "include": "#variable"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.acs",
                    "begin": "//",
                    "end": "$",
                    "contentName": "comment.line.double-slash.text.acs"
                },
                {
                    "name": "comment.block.acs",
                    "begin": "/\\*",
                    "end": "\\*/",
                    "contentName": "comment.block.text.acs"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.acs",
                    "begin": "(?<!\\\\)\"",
                    "end": "(?<!\\\\)\""
                },
                {
                    "name": "string.quoted.single.acs",
                    "begin": "'",
                    "end": "'"
                }
            ]
        },
        "punctuation": {
            "patterns": [
                {
                    "name": "punctuation.terminator.statement.acs",
                    "match": ";"
                },
                {
                    "name": "punctuation.brackets.round.acs",
                    "match": "[()]"
                },
                {
                    "name": "punctuation.brackets.square.acs",
                    "match": "[\\[\\]]"
                },
                {
                    "name": "punctuation.brackets.curly.acs",
                    "match": "[{}]"
                },
                {
                    "name": "constant.numeric.decimal.point.acs",
                    "match": "(?<=[\\d]?)\\.(?=[\\d])"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.acs",
                    "match": "\\b(?i:if|else|for|do|while|switch|case|break|continue|return)\\b"
                },
                {
                    "name": "keyword.operator.acs",
                    "match": "(?:[*\\/%|=^~]=?|[+\\-<>&!]{1,2}=?|:)"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "constant.numeric.acs",
                    "match": "\\d+"
                },
                {
                    "name": "storage.type.script.acs",
                    "match": "(?i)(?<=^script.+?)\\w+?$"
                },
                {
                    "name": "constant.hexadecimal.acs",
                    "match": "\\s0[xX][0-9a-fA-F]+"
                },
                {
                    "name": "constant.acs",
                    "match": "\\b[A-Z_0-9]+?\\b"
                },
                {
                    "name": "storage.type.acs",
                    "match": "\\b(?i:null|void|array|bool|script)\\b|\\b(?<!\\.)\\w+?(?=\\ (?!(?i:TRUE|FALSE))(?:[a-zA-Z]+?))"
                },
                {
                    "name": "constant.language.boolean.acs",
                    "match": "\\b(TRUE|FALSE)\\b"
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "name": "entity.name.function.acs",
                    "match": "\\b\\w+(?=\\s*\\()\\b"
                },
                {
                    "name": "variable.parameter",
                    "match": "\\w:"
                }
            ]
        },
        "directives": {
            "patterns": [
                {
                    "name": "keyword.control.directive.acs",
                    "match": "^\\#(?:include|define|library)\\b"
                }
            ]
        },
        "variable": {
            "patterns": [
                {
                    "name": "variable.parameter.acs",
                    "match": "(?<=\\w+[\\[\\]]?\\.)\\w+\\b"
                },
                {
                    "name": "variable.other.acs",
                    "match": "\\b\\w+\\b"
                }
            ]
        }
    },
    "scopeName": "source.acs"
}
